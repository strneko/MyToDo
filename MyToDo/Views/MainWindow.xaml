<Window x:Class="MyToDo.Views.MainWindow"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   xmlns:local="clr-namespace:MyToDo"
   mc:Ignorable="d"
   xmlns:prism="http://prismlibrary.com/" xmlns:viewmodels="clr-namespace:MyToDo.ViewModels" xmlns:models="clr-namespace:MyToDo.WPF.Models" xmlns:converter="clr-namespace:MyToDo.WPF.Resources.Converters" d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        prism:ViewModelLocator.AutoWireViewModel="True"
   Title="ToDo" Height="700" Width="1100"
         MouseDown="Window_MouseDown"
        >
    <Window.Resources>
        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/MainStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            <ContextMenu x:Key="ItemContextMenu">
                <MenuItem Header="重命名" Command="{Binding StartEditingCommand}"/>
                <MenuItem Header="删除" Command="{Binding DeleteCommand}"/>
            </ContextMenu>

            <ContextMenu x:Key="GroupContextMenu">
                <MenuItem Header="重命名" Command="{Binding StartEditingCommand}"/>
                <MenuItem Header="删除" Command="{Binding DeleteCommand}"/>
            </ContextMenu>
        </ResourceDictionary>
        
    </Window.Resources>
    
    
    <DockPanel>
        <!-- 左侧导航 -->
        <DockPanel  Width="250" DockPanel.Dock="Left" >
            
            <Grid Height="80" DockPanel.Dock="Top">
                <Image Source="/Resources/Images/daily.png" Width="80" Height="80" >
                    <Image.Clip>
                        <EllipseGeometry Center="40,40" RadiusX="40" RadiusY="40" />
                    </Image.Clip>
                </Image>
                <Grid Grid.Column="1">
                    <TextBlock Text="test@test.com" FontSize="20" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                    <TextBlock Grid.Row="1" Text="test@test.com" FontSize="16" Opacity="0.6" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                </Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
            </Grid>
            <TextBox x:Name="SearchBox" Height="40" Text="搜索" DockPanel.Dock="Top" >
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter"/>
                </TextBox.InputBindings>
            </TextBox>
            <Grid DockPanel.Dock="Bottom">
                <Button Background="Transparent" BorderThickness="0" Command="{Binding AddTaskCommand}" HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <Image Source="/Resources/Images/add.png" Width="20" Height="20" Margin="0,0,10,0" VerticalAlignment="Center"/>
                        <TextBlock Text="新建列表" Width="170" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>

                <Button Background="Transparent" BorderThickness="0" Command="{Binding AddGroupCommand}" HorizontalAlignment="Stretch" Grid.Column="1">
                    <Image Source="/Resources/Images/AddGroup.png" Width="20" Height="20" HorizontalAlignment="Center"/>
                </Button>


                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
            </Grid>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <!-- 固定列表 -->
                    <ItemsControl ItemsSource="{Binding FixedNavItems}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Padding="10 5" Background="Transparent">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
 CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding IconPath}"  Width="20" Height="20" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                        <TextBlock Text="{Binding Title}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Border Height="1" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Margin="10,5"/>
                    <!--自定义列表 -->
                    <ItemsControl ItemsSource="{Binding DynamicNavItems}" IsKeyboardFocusWithinChanged="ItemsControl_IsKeyboardFocusWithinChanged">
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="FocusManager.IsFocusScope" Value="True"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type models:NavigationItem}">
                                <Border Padding="10 5" Background="Transparent" ContextMenu="{StaticResource ItemContextMenu}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                   CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding IconPath}" Width="20" Height="20" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" 
                                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                            VerticalAlignment="Center" Width="150" 
                                            LostFocus="TextBox_LostFocus" 
                                            GotFocus="TextBox_GotFocus" 
                                            KeyDown="TextBox_KeyDown"
                                            Loaded="TextBox_Loaded"
                                            FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" />
                                        <TextBlock Text="{Binding Title}" 
                                            Visibility="{Binding IsEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}" 
                                            VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type models:NavigationGroup}">
                                <Expander ContextMenu="{StaticResource ItemContextMenu}" >
                                    <Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/Resources/Images/Group.png" Width="20" Height="20" Margin="0,0,8,0"/>
                                            <TextBox Text="{Binding GroupName, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                                VerticalAlignment="Center" Width="150" LostFocus="TextBox_LostFocus" Loaded="TextBox_Loaded" GotFocus="TextBox_GotFocus" KeyDown="TextBox_KeyDown" 
                                                FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" />
                                            <TextBlock Text="{Binding GroupName}" 
                                                Visibility="{Binding IsEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}" 
                                                VerticalAlignment="Center" />
                                        </StackPanel>
                                    </Expander.Header>

                                    <ItemsControl ItemsSource="{Binding Items}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type models:NavigationItem}">
                                                <Border Padding="10 5" Background="Transparent"  ContextMenu="{StaticResource ItemContextMenu}" >
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                                            <i:InvokeCommandAction Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                   CommandParameter="{Binding}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{Binding IconPath}" Width="20" Height="20" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                                        <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" 
                                                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                                            VerticalAlignment="Center" Width="150" 
                                                            LostFocus="TextBox_LostFocus" 
                                                            GotFocus="TextBox_GotFocus" 
                                                            KeyDown="TextBox_KeyDown"
                                                            Loaded="TextBox_Loaded"
                                                            FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" />
                                                        <TextBlock Text="{Binding Title}" 
                                                            Visibility="{Binding IsEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}" 
                                                            VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Expander>
                            </DataTemplate>
                            
                        </ItemsControl.Resources>
                    </ItemsControl>
                    
                </StackPanel>
            </ScrollViewer>


        </DockPanel>

        <!-- 主内容区 -->
        <ContentControl prism:RegionManager.RegionName="ContentRegion"/>

       
    </DockPanel>
</Window>
